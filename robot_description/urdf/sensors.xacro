<?xml version="1.0" encoding="utf-8"?>
<robot name="robot_description" xmlns:xacro="http://ros.org/wiki/xacro">
<!--color--> 
 <gazebo reference="base_link">
    <material>Gazebo/White</material>
 </gazebo>
  <gazebo reference="lidar">
    <material>Gazebo/Blue</material>
 </gazebo>
  <gazebo reference="camera">
    <material>Gazebo/Red</material>
 </gazebo>
 <gazebo reference="left_wheel">
    <material>Gazebo/Orange</material>
 </gazebo>
 <gazebo reference="right_wheel">
    <material>Gazebo/Orange</material>
 </gazebo>

<!--transmission-->
 <transmission name="left_wheel_joint_trans">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="left_wheel_joint" >
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
            </joint>
            <actuator name="left_wheel_joint_motor">
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
 </transmission>

 <transmission name="right_wheel_joint_trans">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="right_wheel_joint" >
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
            </joint>
            <actuator name="right_wheel_joint_motor">
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
 </transmission>
<!--controller-->
 <gazebo>
            <plugin name="differential_drive_controller" 
                    filename="libgazebo_ros_diff_drive.so">
                <rosDebugLevel>Error</rosDebugLevel>
                <publishWheelTF>true</publishWheelTF>
                <robotNamespace>/</robotNamespace>
                <publishTf>1</publishTf>
                <publishOdomTF>true</publishOdomTF>
                <publishWheelJointState>true</publishWheelJointState>
                <alwaysOn>true</alwaysOn>
                <updateRate>60</updateRate>
                <legacyMode>true</legacyMode>
                <leftJoint>left_wheel_joint</leftJoint>
                <rightJoint>right_wheel_joint</rightJoint>
                <wheelSeparation>0.18</wheelSeparation>
                <wheelDiameter>0.064</wheelDiameter>
                <broadcastTF>1</broadcastTF>
                <wheelTorque>40</wheelTorque>
                <wheelAcceleration>1.5</wheelAcceleration>
                <commandTopic>cmd_vel</commandTopic>
                <odometryFrame>odom</odometryFrame> 
                <odometryTopic>odom</odometryTopic> 
                <odometrySource>world</odometrySource> 
                <robotBaseFrame>base_footprint</robotBaseFrame>
            </plugin>
 </gazebo>
<!--sensor_camera-->
 <gazebo reference="camera">
            <sensor type="camera" name="camera_node">
                <update_rate>60.0</update_rate>
                <camera name="head">
                    <horizontal_fov>1.2217304</horizontal_fov>
                    <image>
                        <width>1280</width>
                        <height>720</height>
                        <format>R8G8B8</format>
                    </image>
                    <clip>
                        <near>0.02</near>
                        <far>300</far>
                    </clip>
                    <noise>
                        <type>gaussian</type>
                        <mean>0.0</mean>
                        <stddev>0.007</stddev>
                    </noise>
                </camera>
                <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                    <alwaysOn>true</alwaysOn>
                    <updateRate>0.0</updateRate>
                    <cameraName>/camera</cameraName>
                    <imageTopicName>image_raw</imageTopicName>
                    <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                    <frameName>camera</frameName>
                    <hackBaseline>0.07</hackBaseline>
                    <distortionK1>0.0</distortionK1>
                    <distortionK2>0.0</distortionK2>
                    <distortionK3>0.0</distortionK3>
                    <distortionT1>0.0</distortionT1>
                    <distortionT2>0.0</distortionT2>
                </plugin>
            </sensor>
 </gazebo>
<!--sensor_lidar-->
 <gazebo reference="lidar">
            <sensor type="gpu_ray" name="rplidar">
                <pose>0 0 0 0 0 0</pose>
                <visualize>false</visualize>
                <update_rate>10</update_rate>
                <ray>
                    <scan>
                      <horizontal>
                        <samples>720</samples>
                        <resolution>1</resolution>
                        <min_angle>-3.141592653</min_angle>
                        <max_angle>3.141592653</max_angle>
                      </horizontal>
                    </scan>
                    <range>
                      <min>0.20</min>
                      <max>12</max>
                      <resolution>0.01</resolution>
                    </range>
                    <noise>
                      <type>gaussian</type>
                      <mean>0.0</mean>
                      <stddev>0.01</stddev>
                    </noise>
                </ray>
                <plugin name="rplidar_controller" filename="libgazebo_ros_gpu_laser.so">
                    <topicName>/scan</topicName>
                    <frameName>lidar</frameName>
                </plugin>
            </sensor>
 </gazebo>

</robot>
